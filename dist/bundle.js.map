{"version":3,"sources":["node_modules/browser-pack/_prelude.js","scripts/app.js","scripts/filter.js","scripts/jsonParser.js","scripts/view.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nlet JsonModule = require(\"./jsonParser\");\nlet FilterModule = require(\"./filter\");\nlet ViewModule = require(\"./view\");\n\n// Load 1st JSON file\nJsonModule.getJson(\"json/songs2.json\");\n\n// Event Listeners\n$(\"#addLink\").click(ViewModule.addView);\n\n$(\"#listLink\").click(ViewModule.listView);\n\n$(\"#moreButton\").click(function() {\n\t$(this).hide();\n\tJsonModule.getJson(\"json/songs1.json\");\n});\n\n$(\"#listView\").click(function(event) {\n\tif ($(event.target).html() === \"Delete\") {\n\t\t// remove song from array that matches id of paragraph containing delete button\n\t\tJsonModule.removeSong(event);\n\t\t// refresh song list and re-index song paragraphs\n\t\tViewModule.refreshListView(JsonModule.getSongList());\n\t}\n});\n\n\n// *** TO DO ***\n\n// Filter Event Listeners\n// Re-filter on add or remove\n\n$(\"#addButton\").click(function() {\n\tlet newSong = ``;\n\t// collect inputs and create new song string\n\tnewSong = `${$(\"#songName\").val()} - by ${$(\"#artistName\").val()}`;\n\tnewSong += ` on the album ${$(\"#albumName\").val()}`;\n\t// send new song string to addSong function\n\tJsonModule.addSong(newSong);\n\t// clear inputs\n\t$(\"#artistName, #songName, #albumName\").val(``);\n\t// Switch to listView\n\t$(\"#listView\").show();\n  $(\"#addView\").hide();\n});\n\n\n\n\n","\"use strict\";\n\n// let JsonModule = require(\"./jsonParser\"); // I haven't used this yet, may not be needed\n\nlet filterForm = {\n\n\tpopulateDropdowns: function(songList) {\n\n\t\tlet artists = [];\n\t\tlet albums = [];\n\t\tlet filteredArtists = [];\n\t\tlet filteredAlbums = [];\n\t\tlet artistListHtmlStr = ``;\n\t\tlet albumListHtmlStr = ``;\n\n\t\tlet removeDupes = function (e, i, a) {\n\t\t\tif (e !== a[i+1]) {\n\t\t\t\treturn e;\n\t\t\t}\n\t\t};\n\n\t\tlet buildString = function (array) {\n\t\t\tlet HtmlString = ``;\n\t\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\t\tlet currentItem = array[i];\n\t\t\t\tHtmlString += `<option value=\"${currentItem}\">${currentItem}</option>`;\n\t\t\t}\n\t\t\treturn HtmlString;\n\t\t}\n\n\t\t// make array of Artists and array of Albums\n\t\tfor (let i = 0; i < songList.length; i++) {\n\t\t\tlet currentSong = songList[i];\n\t\t\tartists.push(currentSong.artist);\n\t\t\talbums.push(currentSong.album);\n\t\t};\n\n\t\t// Sort and filter arrays\n\t\tfilteredArtists = artists.sort().filter(removeDupes);\n\t\tfilteredAlbums = albums.sort().filter(removeDupes);\n\t\n\t\t// Build HTML strings\n\t\tartistListHtmlStr = buildString(filteredArtists);\n\t\talbumListHtmlStr = buildString(filteredAlbums);\n\n\t\t// Set HTML of respective select elements\n\t\t$(\"#selectArtist\").html(artistListHtmlStr);\n\t\t$(\"#selectAlbum\").html(albumListHtmlStr);\n\t},\n\n\tgetMatches: function(filter) {\n\t\t// return matching song indexes or make a filtered object and call populate?\n\t}\n\n}\n\nmodule.exports = filterForm;\n","\"use strict\";\n\nlet ViewModule = require(\"./view\");\nlet FilterModule = require(\"./filter\");\nlet songs = [];\n\nlet jsonParser = {\n\n\tgetJson: function(jsonUrl) {\n\t\t$.ajax({url: jsonUrl}).done(jsonParser.parseSongList);\n\t},\n\n\tparseSongList: function(data) {\n\n\t\tfor (let i = 0; i < data.songs.length; i++) {\n      songs.push(data.songs[i]);\n    }\n\t  // Populate Song List View with songs array\n\t  ViewModule.refreshListView(jsonParser.getSongList());\n    FilterModule.populateDropdowns(jsonParser.getSongList());\n\t},\n\n  getSongList: function() {\n    return songs;\n  },\n\n  addSong: function(newSong) {\n    songs.push(newSong);\n    ViewModule.refreshListView(jsonParser.getSongList());\n  },\n\n  removeSong: function(event) {\n    songs.splice($(event.target).parent().attr(\"id\"), 1);\n    ViewModule.refreshListView(jsonParser.getSongList());\n  }\n\n}\n\nmodule.exports = jsonParser;\n","\"use strict\";\n\nlet JsonModule = require(\"./jsonParser\");\n\nlet viewManager = {\n\n\t\trefreshListView: function(songArray) {\n\t\t\tlet newSongListText = ``;\n\t\t\tfor (let i = 0; i < songArray.length; i++) {\n\t\t\t\tlet currentSong = songArray[i];\n\t\t\t\tnewSongListText += `<p id=\"${i}\">${currentSong.title} - by `;\n\t\t\t\tnewSongListText += `${currentSong.artist} on the album ${currentSong.album} `;\n\t\t\t\tnewSongListText += `<button>Delete</button></p>`;\n\t\t\t}\n\t\t\t$(\".songs\").html(newSongListText);\n\t\t},\n\n\t\taddView: function() {\n\t\t\t$(\"#listView\").hide();\n\t  \t$(\"#addView\").show();\n\t\t},\n\n\t\tlistView: function() {\n\t\t\t$(\"#listView\").show();\n  \t\t$(\"#addView\").hide();\n\t\t}\n\n\t};\n\n\tmodule.exports = viewManager\n\n"]}